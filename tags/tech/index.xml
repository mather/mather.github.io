<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tech on Reveal My Ignorance</title>
    <link>https://mather.github.io/tags/tech/</link>
    <description>Recent content in tech on Reveal My Ignorance</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>All rights reserved.</copyright>
    <lastBuildDate>Sat, 07 Dec 2019 23:57:04 +0900</lastBuildDate>
    
	<atom:link href="https://mather.github.io/tags/tech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ポートフォリオサイトを Hugo で Github Pages &#43; Github Actions で構築する話</title>
      <link>https://mather.github.io/posts/2019/12/08/hugo_with_github_pages/</link>
      <pubDate>Sat, 07 Dec 2019 23:57:04 +0900</pubDate>
      
      <guid>https://mather.github.io/posts/2019/12/08/hugo_with_github_pages/</guid>
      <description>宮崎 IT 関連勉強会 Advent Calendar 2019 8 日目の記事です。
皆さん、Github 活用してますか？
Github には Github Pages という機能があり、静的サイトのホスティングを行うことができます。 特に、 [アカウント名].github.io という名前のリポジトリの場合はドメイン直下のページが作成できます。
参考: GitHub Pages サイトの種類
それに加えて、Github Actions が一般に公開されました。 これは Push などのイベントをトリガーとしてビルド、テスト、デプロイなどが自動的に実行できる仕組みです。いわゆる CI(継続的インテグレーション)や CD(継続的デプロイ)として機能させることができますし、他にもプルリクのレビュー補助や通知などの機能にも利用できるでしょう。
これらを組み合わせると、以下のようなワークフローが可能になります。
 静的サイトジェネレーター(Hugo, Jekyll, etc&amp;hellip;) でサイトを作る ローカルでレビューし、問題なければ指定のブランチにプッシュ Github Actions でプッシュを検知し、静的サイトをビルド [アカウント名].github.io の場合、ビルド完了した静的サイトを master ブランチにデプロイ  それ以外のリポジトリの場合は gh-pages ブランチがデプロイ先となります    今回はこれを Hugo でやってみよう、という話です。
ポートフォリオを作る Hugo をインストールします。Mac なので Homebrew でインストールできます。
$ brew install hugo 今回は空っぽの Jekyll サイト(5 年ほど前に作って放置してた)を削除して作り直しますので、既存のファイルを削除したあとは以下のように Hugo の初期化を行います。</description>
    </item>
    
  </channel>
</rss>